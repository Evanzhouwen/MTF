STRUCK_ROOT_DIR = ThirdParty/Struck
STRUCK_SRC_DIR = ${STRUCK_ROOT_DIR}/src
STRUCK_INCLUDE_DIR = ${STRUCK_ROOT_DIR}/include
STRUCK_HEADER_DIR = ${STRUCK_INCLUDE_DIR}/mtf/${STRUCK_ROOT_DIR}
STRUCK_LIB_NAME = $(addsuffix ${LIB_POST_FIX}, struck)
STRUCK_LIB_SO =  $(addprefix lib, $(addsuffix .so, ${STRUCK_LIB_NAME}))

STRUCK_HEADERS = $(addprefix  ${STRUCK_HEADER_DIR}/, Struck.h)

STRUCK_LIB_MODULES = Tracker Config Features HaarFeature HaarFeatures HistogramFeatures ImageRep LaRank MultiFeatures RawFeatures Sampler
STRUCK_LIB_INCLUDES = Kernels Rect Sample
STRUCK_LIB_HEADERS = $(addprefix ${STRUCK_HEADER_DIR}/,$(addsuffix .h, ${STRUCK_LIB_MODULES} ${STRUCK_LIB_INCLUDES}))
STRUCK_LIB_SRC = $(addprefix ${STRUCK_SRC_DIR}/,$(addsuffix .cpp, ${STRUCK_LIB_MODULES}))

ifneq ($(OS),Windows_NT)
THIRD_PARTY_TRACKERS += Struck
_THIRD_PARTY_TRACKERS_SO += ${STRUCK_LIB_NAME}
THIRD_PARTY_TRACKERS_SO_LOCAL += ${STRUCK_ROOT_DIR}/${STRUCK_LIB_SO}
THIRD_PARTY_HEADERS += ${STRUCK_HEADERS} ${STRUCK_LIB_HEADERS} 
THIRD_PARTY_INCLUDE_DIRSTHIRD_PARTY_INCLUDE_DIRS += ${STRUCK_INCLUDE_DIR}
THIRD_PARTY_INCLUDE_DIRS += ${STRUCK_INCLUDE_DIR}
THIRD_PARTY_LIBS_DIRS += -L${STRUCK_ROOT_DIR}
endif

${BUILD_DIR}/Struck.o: ${STRUCK_SRC_DIR}/Struck.cc ${STRUCK_HEADERS} ${UTILITIES_HEADER_DIR}/miscUtils.h ${MACROS_HEADER_DIR}/common.h ${ROOT_HEADER_DIR}/TrackerBase.h
	${CXX} -c ${MTF_PIC_FLAG} ${WARNING_FLAGS} ${OPT_FLAGS} ${MTF_COMPILETIME_FLAGS} $< ${OPENCV_FLAGS} -I${STRUCK_INCLUDE_DIR} -I${UTILITIES_INCLUDE_DIR} -I${MACROS_INCLUDE_DIR} -I${ROOT_INCLUDE_DIR} -o $@
	
${MTF_LIB_INSTALL_DIR}/${STRUCK_LIB_SO}: ${STRUCK_ROOT_DIR}/${STRUCK_LIB_SO}
	${MTF_LIB_INSTALL_CMD_PREFIX} cp -f $< $@	
${STRUCK_ROOT_DIR}/${STRUCK_LIB_SO}: ${STRUCK_LIB_SRC} ${STRUCK_LIB_HEADERS}
	cd ${STRUCK_ROOT_DIR}; rm -rf Build; mkdir Build; cd Build; cmake -D STRK_LIB_NAME=${STRUCK_LIB_NAME} ..
	$(MAKE) -C ${STRUCK_ROOT_DIR}/Build --no-print-directory
	mv ${STRUCK_ROOT_DIR}/Build/${STRUCK_LIB_SO} ${STRUCK_ROOT_DIR}/	