project(FragTrack)

cmake_minimum_required(VERSION 2.6)

if (WIN32)
	set(OPENCV_INCLUDE_DIR_WIN "C:/OpenCV/build/include" CACHE PATH "OpenCV header directory")
	set(OPENCV_LIB_DIR_WIN "C:/OpenCV/build/x86/vc14/lib" CACHE PATH "OpenCV library directory")
	set(OpenCV_SUFFIX "2410" CACHE STRING "OpenCV Suffix")
	set(OpenCV_COMPONENTS calib3d contrib core features2d flann gpu highgui imgproc legacy ml nonfree objdetect ocl photo stitching superres video videostab)
	find_package(OpenCV)
	if(NOT OpenCV_FOUND)
		set(OpenCV_INCLUDE_DIRS "${OPENCV_INCLUDE_DIR_WIN}")
		set(OpenCV_LIBRARY_DIR "${OPENCV_LIB_DIR_WIN}")
		addPrefixAndSuffix("${OpenCV_COMPONENTS}" "${OpenCV_LIBRARY_DIR}/opencv_" "${OpenCV_SUFFIX}.lib" OpenCV_LIBS)
	endif()
else()
	find_package(OpenCV REQUIRED)
endif()

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release CACHE STRING "Build type" FORCE)
endif()

set(FRG_LIB_NAME frg CACHE STRING "FRG_LIB_NAME")
set(FRG_SRC src/fragtrack_envelope.cpp src/Fragments_Tracker.cpp src/emd.cpp)

#INCLUDE_DIRECTORIES ( ${OpenCV_INCLUDE_DIRS})

if(WIN32)
	add_library (${FRG_LIB_NAME} STATIC ${FRG_SRC})
else()
	add_library (${FRG_LIB_NAME} SHARED ${FRG_SRC})
endif()

add_executable(FragTrack ${FRG_SRC})
target_include_directories(FragTrack PUBLIC include ${OpenCV_INCLUDE_DIRS})

target_link_libraries(FragTrack ${OpenCV_LIBS})
target_link_libraries(${FRG_LIB_NAME} ${OpenCV_LIBS})
target_include_directories(${FRG_LIB_NAME} PUBLIC include ${OpenCV_INCLUDE_DIRS})
if(WIN32)
	install(TARGETS ${FRG_LIB_NAME} ARCHIVE DESTINATION ${MTF_INSTALL_DIR})
else()
	install(TARGETS ${FRG_LIB_NAME} LIBRARY DESTINATION ${MTF_INSTALL_DIR})
endif() 
