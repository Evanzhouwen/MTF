cmake_minimum_required(VERSION 2.6 FATAL_ERROR)
if(COMMAND cmake_policy)
      cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)

project(MIL)

if (WIN32)
	set(OPENCV_INCLUDE_DIR_WIN "C:/OpenCV/build/include" CACHE PATH "OpenCV header directory")
	set(OPENCV_LIB_DIR_WIN "C:/OpenCV/build/x86/vc14/lib" CACHE PATH "OpenCV library directory")
	set(OpenCV_SUFFIX "2410" CACHE STRING "OpenCV Suffix")
	set(OpenCV_COMPONENTS calib3d contrib core features2d flann gpu highgui imgproc legacy ml nonfree objdetect ocl photo stitching superres video videostab)
	find_package(OpenCV)
	if(NOT OpenCV_FOUND)
		set(OpenCV_INCLUDE_DIRS "${OPENCV_INCLUDE_DIR_WIN}")
		set(OpenCV_LIBRARY_DIR "${OPENCV_LIB_DIR_WIN}")
		addPrefixAndSuffix("${OpenCV_COMPONENTS}" "${OpenCV_LIBRARY_DIR}/opencv_" "${OpenCV_SUFFIX}.lib" OpenCV_LIBS)
	endif()
else()
	find_package(OpenCV REQUIRED)
endif()

# add platform-specific defines here so code can know which
# OS we're using (WIN32, UNIX, APPLE)
# :TODO:
set(MIL_LIB_NAME mil CACHE STRING "MIL_LIB_NAME")
set(MIL_INCLUDE_DIRS include/mtf/ThirdParty/MIL)
set(MIL_SRC src/cv_onlineboosting.cpp ${MIL_INCLUDE_DIRS}/cv_onlineboosting.h src/cv_onlinemil.cpp ${MIL_INCLUDE_DIRS}/cv_onlinemil.h src/object_tracker.cpp ${MIL_INCLUDE_DIRS}/object_tracker.h)
if(WIN32)
	add_library(${MIL_LIB_NAME} STATIC ${MIL_SRC})
	target_compile_definitions(${MIL_LIB_NAME} PUBLIC _CRT_SECURE_NO_WARNINGS)
	set(MIL_INSTALL_DIR_DEFAULT C:/MTF/lib)
else()
	add_library(${MIL_LIB_NAME} SHARED ${MIL_SRC})
	set(MIL_INSTALL_DIR_DEFAULT /usr/local/lib)
endif()
set(MIL_LIB_INSTALL_DIR ${MIL_INSTALL_DIR_DEFAULT} CACHE PATH "Directory to install MIL tracker library")
target_link_libraries(${MIL_LIB_NAME} ${OpenCV_LIBRARIES})
target_include_directories(${MIL_LIB_NAME} PUBLIC include)
if(WIN32)
	install(TARGETS ${MIL_LIB_NAME} ARCHIVE DESTINATION ${MIL_LIB_INSTALL_DIR})
else()	
	install(TARGETS ${MIL_LIB_NAME} LIBRARY DESTINATION ${MIL_LIB_INSTALL_DIR})
endif()
# add_executable(milApp samples/object_tracker_app.cpp)
# add_dependencies(milApp ${MIL_LIB_NAME})
# target_link_libraries(milApp ${OpenCV_LIBRARIES} ${MIL_LIB_NAME})
# target_include_directories(milApp PUBLIC include/mtf/ThirdParty/MIL)
